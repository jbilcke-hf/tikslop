ui:
  product_name: "#tikslop"
  show_chat_in_video_view: false

render_queue:
  # how many clips should be stored in advance
  buffer_size: 2

  # how many requests for clips can be run in parallel
  max_concurrent_generations: 2

  # start playback as soon as we have 1 video over 3 (25%)
  minimum_buffer_percent_to_start_playback: 5

# the purpose of those "ads" is to make the user patient during LLM inference.
# Later this system could be used for real advertising to make it self-sufficient,
# prevent TikSlop from being canceled by making it free and self-funded
advertising:
  enable_ads: true
  ad_banners:
    - image: assets/ads/lerobot.gif
      link: https://huggingface.co/lerobot
    - image: assets/ads/smolagents.gif
      link: https://huggingface.co/docs/smolagents/index

simulation:
  # whether to enable simulation loop to evolve descriptions over time
  enable_sim_loop: true
  
  # delay to wait after each simulation loop (in seconds)
  sim_loop_delay_in_sec: 4

# it's OK to use high values here,
# because some of those values are limited by the backend config,
# such as the resoltuion or number of frames
video:
  default_negative_prompt: ""

  # transition time between each clip
  # the exit (older) clip will see its playback time reduced by this amount
  transition_buffer_duration_ms: 300

  # how long a generated clip should be, in Duration
  original_clip_duration_seconds: 3

  # The model works on resolutions that are divisible by 32
  # and number of frames that are divisible by 8 + 1 (e.g. 257).
  # 
  # In case the resolution or number of frames are not divisible
  # by 32 or 8 + 1, the input will be padded with -1 and then
  # cropped to the desired resolution and number of frames.
  # 
  # The model works best on resolutions under 720 x 1280 and
  # number of frames below 257.

  # number of inference steps
  # (this is capped by the backend API)
  num_inference_steps: 8

  guidance_scale: 1.0

  # original frame-rate of each clip (before we slow them down)
  # in frames per second (so an integer)
  original_clip_frame_rate: 25

  # (this is capped by the backend API)
  original_clip_width: 1216

  # (this is capped by the backend API)
  original_clip_height: 672

  # to do more with less, we slow down the videos (a 3s video will become a 4s video)
  # but if you are GPU rich feel feel to play them back at 100% of their speed!
  clip_playback_speed: 0.7